version: "3.9"

services:
  nginx:
    image: nginx:1.23
    restart: unless-stopped
    ports:
      # - "80:80"
      - "443:443"
    depends_on:
      - app
    env_file:
      - .env
    environment:
      - LABEL_STUDIO_HOST=${LABEL_STUDIO_HOST:-}
      - NGINX_FILE=${NGINX_FILE:-default.conf}
      - NGINX_SSL_CERT=/certs/fullchain.pem
      - NGINX_SSL_CERT_KEY=/certs/privkey.pem
    volumes:
      # keep in sync with deploy/docker-entrypoint.d/30-copy-static-data.sh
      - source: static
        target: /label-studio/label_studio
        type: volume
        volume:
          nocopy: true
      - /ceph/label-studio:/label-studio/data:rw
      - ./deploy/nginx/${NGINX_FILE:-default.conf}:/etc/nginx/templates/${NGINX_FILE:-default.conf}.template
      - ./deploy/nginx/scripts:/docker-entrypoint.d/label-studio
      - /etc/letsencrypt/live/hfsp/fullchain.pem:/certs/fullchain.pem:ro
      - /etc/letsencrypt/live/hfsp/privkey.pem:/certs/privkey.pem:ro
    command: nginx -g "daemon off;"

  app:
    stdin_open: true
    tty: true
    image: heartexlabs/label-studio:v1.6.0
    restart: unless-stopped
    expose:
      - "8080"
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - DJANGO_DB=default
      - POSTGRE_NAME=postgres
      - POSTGRE_USER=postgres
      - POSTGRE_PASSWORD=
      - POSTGRE_PORT=5432
      - POSTGRE_HOST=db
      - LABEL_STUDIO_HOST=${LABEL_STUDIO_HOST:-}
      - JSON_LOG=1
#      - LOG_LEVEL=DEBUG
    volumes:
      - /ceph/label-studio:/label-studio/data:rw
    command: label-studio-uwsgi

  db:
    image: postgres:11.5
    hostname: db
    restart: unless-stopped
    # Optional: Enable TLS on PostgreSQL
    # Just drop your server.crt and server.key into folder 'deploy/pgsql/certs'
    # NOTE: Both files must have permissions u=rw (0600) or less
#    command: >
#      -c ssl=on
#      -c ssl_cert_file=/var/lib/postgresql/certs/server.crt
#      -c ssl_key_file=/var/lib/postgresql/certs/server.key
    env_file:
      - .env
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - /data/postgresql:/var/lib/postgresql/data
      - ./deploy/pgsql/certs:/var/lib/postgresql/certs:ro

volumes:
  static: {}
